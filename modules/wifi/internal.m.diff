2a3
> @import CoreWLAN;
4d4
< #import "../../LuaSkinThread.h"
9a10,18
> static int logFnRef = LUA_NOREF;
> 
> #pragma mark - Testing out better logging with hs.logger
> 
> #define _cERROR   "ef"
> #define _cWARN    "wf"
> #define _cINFO    "f"
> #define _cDEBUG   "df"
> #define _cVERBOSE "vf"
12,13c21,22
< static int __unused log_to_console(lua_State *L, int level, NSString *theMessage) {
<     LuaSkin *skin = LST_getLuaSkin();
---
> static int __unused log_to_console(lua_State *L, const char *level, NSString *theMessage) {
>     LuaSkin *skin = [LuaSkin shared];
29c38,57
<     [skin logAtLevel:level withMessage:fullMessage];
---
>     // Put it into the system logs, may help with troubleshooting
>     [skin logBreadcrumb:[NSString stringWithFormat:@"hs.wifi: %@", fullMessage]];
> 
>     // If hs.logger reference set, use it and the level will indicate whether the user sees it or not
>     // otherwise we print to the console for everything, just in case we forget to register.
>     if (logFnRef != LUA_NOREF) {
>         [skin pushLuaRef:refTable ref:logFnRef];
>         lua_getfield(L, -1, level); lua_remove(L, -2);
>     } else {
>         lua_getglobal(L, "print");
>     }
> 
>     lua_pushstring(L, [fullMessage UTF8String]);
>     if (![[LuaSkin shared] protectedCallAndTraceback:1 nresults:0]) { return lua_error(L); }
>     return 0;
> }
> 
> static int lua_registerLogForC(__unused lua_State *L) {
>     [[LuaSkin shared] checkArgs:LS_TTABLE, LS_TBREAK];
>     logFnRef = [[LuaSkin shared] luaRef:refTable];
42,45c70,72
< @interface LST_HSWifiScan : NSObject
< @property int      fnRef ;
< @property BOOL     isDone ;
< @property NSThread *myMainThread ;
---
> @interface HSWifiScan : NSObject
> @property int fnRef ;
> @property BOOL isDone ;
50c77
< @implementation LST_HSWifiScan
---
> @implementation HSWifiScan
57d83
<         _myMainThread = [NSThread currentThread] ;
71,74c97,99
<         [self performSelector:@selector(invokeCallback:)
<                      onThread:_myMainThread
<                    withObject:theError
<                 waitUntilDone:NO];
---
>         [self performSelectorOnMainThread:@selector(invokeCallback:)
>                            withObject:theError
>                         waitUntilDone:NO];
76,79c101,103
<         [self performSelector:@selector(invokeCallback:)
<                      onThread:_myMainThread
<                    withObject:availableNetworks
<                 waitUntilDone:NO];
---
>         [self performSelectorOnMainThread:@selector(invokeCallback:)
>                            withObject:availableNetworks
>                         waitUntilDone:NO];
85c109
<         LuaSkin *skin = LST_getLuaSkin() ;
---
>         LuaSkin *skin = [LuaSkin shared] ;
87c111
<         [LST_getLuaSkin() pushLuaRef:LST_getRefTable(skin, USERDATA_TAG, refTable) ref:_fnRef];
---
>         [[LuaSkin shared] pushLuaRef:refTable ref:_fnRef];
89c113
<             log_to_console(L, LS_LOG_INFO, [(NSError *)object localizedDescription]) ;
---
>             log_to_console(L, _cINFO, [(NSError *)object localizedDescription]) ;
96c120
<             log_to_console(L, LS_LOG_ERROR, [skin toNSObjectAtIndex:-1]) ;
---
>             log_to_console(L, _cERROR, [skin toNSObjectAtIndex:-1]) ;
117c141
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
151c175
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
179c203
<     LuaSkin *skin = LST_getLuaSkin();
---
>     LuaSkin *skin = [LuaSkin shared];
214c238
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
236c260
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
317c341
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
323c347
<         callbackRef = [skin luaRef:LST_getRefTable(skin, USERDATA_TAG, refTable)];
---
>         callbackRef = [skin luaRef:refTable];
330,331c354,355
<     LST_HSWifiScan *scanner = [[LST_HSWifiScan alloc] initWithCallback:callbackRef onInterface:theName];
<     void** scannerPtr = lua_newuserdata(L, sizeof(LST_HSWifiScan *));
---
>     HSWifiScan *scanner = [[HSWifiScan alloc] initWithCallback:callbackRef onInterface:theName];
>     void** scannerPtr = lua_newuserdata(L, sizeof(HSWifiScan *));
349c373
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
408c432
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
439c463
<     LuaSkin *skin = LST_getLuaSkin();
---
>     LuaSkin *skin = [LuaSkin shared];
441c465
<     LST_HSWifiScan *scanner = get_objectFromUserdata(__bridge LST_HSWifiScan, L, 1);
---
>     HSWifiScan *scanner = get_objectFromUserdata(__bridge HSWifiScan, L, 1);
449c473
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
535c559
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
554c578
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
667c691
<     LuaSkin *skin = LST_getLuaSkin() ;
---
>     LuaSkin *skin = [LuaSkin shared] ;
695,696c719,720
<     LST_HSWifiScan *scanner = get_objectFromUserdata(__bridge LST_HSWifiScan, L, 1);
<     LuaSkin *skin = LST_getLuaSkin();
---
>     HSWifiScan *scanner = get_objectFromUserdata(__bridge HSWifiScan, L, 1);
>     LuaSkin *skin = [LuaSkin shared];
702,703c726,727
<     LST_HSWifiScan *scanner = get_objectFromUserdata(__bridge_transfer LST_HSWifiScan, L, 1);
<     LuaSkin *skin = LST_getLuaSkin();
---
>     HSWifiScan *scanner = get_objectFromUserdata(__bridge_transfer HSWifiScan, L, 1);
>     LuaSkin *skin = [LuaSkin shared];
705c729
<     scanner.fnRef = [skin luaUnref:LST_getRefTable(skin, USERDATA_TAG, refTable) ref:scanner.fnRef];
---
>     scanner.fnRef = [skin luaUnref:refTable ref:scanner.fnRef];
727a752
>     {"_registerLogForC", lua_registerLogForC},
747,752c772,778
<     LuaSkin *skin = LST_getLuaSkin();
<     LST_setRefTable(skin, USERDATA_TAG, refTable,
<         [skin registerLibraryWithObject:USERDATA_TAG
<                               functions:wifilib
<                           metaFunctions:nil // metalib
<                         objectFunctions:userdata_metaLib]);
---
>     LuaSkin *skin = [LuaSkin shared];
>     refTable = [skin registerLibraryWithObject:USERDATA_TAG
>                                      functions:wifilib
>                                  metaFunctions:nil // metalib
>                                objectFunctions:userdata_metaLib];
> 
>     logFnRef = LUA_NOREF;
